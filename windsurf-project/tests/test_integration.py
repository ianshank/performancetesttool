import os
import subprocess
import pytest

@pytest.mark.integration
class TestIntegration:
    def test_cli_end_to_end(self, tmp_path):
        """Run the CLI with a sample config and check output files are created."""
        # Path to CLI script and sample config
        cli_script = os.path.abspath(os.path.join(os.path.dirname(__file__), '../src/cli/cli_interface.py'))
        config_path = os.path.abspath(os.path.join(os.path.dirname(__file__), '../examples/test_config.yaml'))
        output_dir = tmp_path / "integration_output"
        output_dir.mkdir()
        # Run the CLI (simulate: python cli_interface.py --config ... --output ...)
        result = subprocess.run([
            'python', cli_script,
            '--config', config_path,
            '--output', str(output_dir)
        ], capture_output=True, text=True)
        # Check process ran successfully
        assert result.returncode == 0, f"CLI failed: {result.stderr}"
        # Check for expected output files (e.g., CSV report)
        files = list(output_dir.glob('*.csv'))
        assert files, "No CSV report generated by CLI integration test" 